apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
// Add the Fabric plugin.
//apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: "androidx.navigation.safeargs.kotlin"

def SERVER_URL = "SERVER_URL"
def API_VERSION = "API_VERSION"
//def SERVER_PIN = "SERVER_PIN"
//def SERVER_PIN_2 = "SERVER_PIN_2"
//def PIN_ENCRYPTED_KEY = "PIN_ENCRYPTED_KEY"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "motocitizen.main"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 26
        versionName "1.2.8"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", API_VERSION, '"1"'
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "name"
    productFlavors {
        local {
            buildConfigField "String", SERVER_URL, '"https://ya.ru"'
        }
        develop {
            buildConfigField "String", SERVER_URL, '"http://188.166.126.84:8080"'
        }
        prod {
            buildConfigField "String", SERVER_URL, '"https://moto.dtp.ru/api"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

static def getLocalIP() {
    return InetAddress.getLocalHost().getHostAddress()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'

    //di
    def hilt_android_version = '2.31-alpha'
    def hilt_version = '1.0.0-alpha03'
    implementation "com.google.dagger:hilt-android:$hilt_android_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_android_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_version"

    //play-services
    implementation "com.google.android.gms:play-services-maps:17.0.1"
    implementation "com.google.android.gms:play-services-location:18.0.0"

    //network
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    //push
    implementation 'com.google.firebase:firebase-analytics:18.0.0'
    implementation 'com.google.firebase:firebase-messaging:21.0.0'
    implementation 'com.google.firebase:firebase-core:18.0.0'

    // Add the Firebase Crashlytics dependency.
    //implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
//    implementation('com.crashlytics.sdk.android:crashlytics:17.2.2@aar') {
//        transitive = true;
//    }

    //rx
    implementation "io.reactivex.rxjava2:rxjava:2.2.7"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    //ui
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.redmadrobot:input-mask-android:4.3.1'
    implementation 'com.google.android:flexbox:2.0.1'

    //app
    implementation "com.android.support:support-annotations:28.0.0"
    annotationProcessor 'com.android.support:support-annotations:28.0.0'

    def work_version = "2.5.0"

    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"

    //performance
    implementation 'com.google.firebase:firebase-perf:19.1.1'

    //remote config
    //implementation 'com.google.firebase:firebase-config:20.0.2'

    //mocker
    implementation "com.github.gmazzo:okhttp-mock:1.3.2"

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    //implementation project(':MPChartLib')

    //test
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Joda Time
    implementation 'net.danlew:android.joda:2.10.7.2'

    //Epoxy
    def epoxy_version = "4.1.0"
    implementation "com.airbnb.android:epoxy:$epoxy_version"
    kapt "com.airbnb.android:epoxy-processor:$epoxy_version"
    implementation "com.airbnb.android:epoxy-paging:$epoxy_version"

    //play-services
    implementation "com.google.android.gms:play-services-maps:17.0.1"
    implementation "com.google.android.gms:play-services-location:18.0.0"

    //ktx
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0"

    // navigation
    def nav_version = "2.3.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // recycler view's snap helper
    implementation 'com.github.rubensousa:gravitysnaphelper:2.2.1'

    // preferences
    implementation 'androidx.preference:preference-ktx:1.1.1'

    // logger
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // pull to refresh
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
}

androidExtensions {
    experimental = true
}

apply plugin: 'com.google.gms.google-services'